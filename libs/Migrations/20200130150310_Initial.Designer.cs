// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using libs.dao;

namespace libs.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200130150310_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("libs.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ExpedienteId")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpedienteId");

                    b.HasIndex("GrupoId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("libs.Models.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFinish")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ExpedienteId")
                        .HasColumnType("int");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfesorId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ExpedienteId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("Asignaturas");
                });

            modelBuilder.Entity("libs.Models.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("libs.Models.Expediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Expedientes");
                });

            modelBuilder.Entity("libs.Models.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("tutorId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("libs.Models.Matricula", b =>
                {
                    b.Property<int>("idExpediente")
                        .HasColumnType("int");

                    b.Property<int>("idAlumno")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("idExpediente", "idAlumno");

                    b.HasIndex("idAlumno");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("libs.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("libs.Models.Alumno", b =>
                {
                    b.HasOne("libs.Models.Expediente", "Expediente")
                        .WithMany()
                        .HasForeignKey("ExpedienteId");

                    b.HasOne("libs.Models.Grupo", null)
                        .WithMany("Alumnos")
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("libs.Models.Asignatura", b =>
                {
                    b.HasOne("libs.Models.Expediente", null)
                        .WithMany("Asignatura")
                        .HasForeignKey("ExpedienteId");

                    b.HasOne("libs.Models.Grupo", null)
                        .WithMany("Asignaturas")
                        .HasForeignKey("GrupoId");

                    b.HasOne("libs.Models.Profesor", null)
                        .WithMany("asignaturas")
                        .HasForeignKey("ProfesorId");
                });

            modelBuilder.Entity("libs.Models.Grupo", b =>
                {
                    b.HasOne("libs.Models.Profesor", "tutor")
                        .WithMany()
                        .HasForeignKey("tutorId");
                });

            modelBuilder.Entity("libs.Models.Matricula", b =>
                {
                    b.HasOne("libs.Models.Alumno", "Alumno")
                        .WithMany("Matriculas")
                        .HasForeignKey("idAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("libs.Models.Expediente", "Expediente")
                        .WithMany("Matriculas")
                        .HasForeignKey("idExpediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
